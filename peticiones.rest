# Base URL para todas las peticiones, apunta al servidor Express local.
# En producción, reemplazar con el dominio real (por ejemplo, https://api.tuapp.com).
@host = http://localhost:3000

# Token JWT predefinido para pruebas, corresponde a userId: 8 con role: "guide".
# Nota: Este token tiene fechas futuras (marzo 2026), lo que sugiere que es un ejemplo.
# Para pruebas reales, generar un token con POST /api/auth/login.
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiZ3VpZGUiLCJpYXQiOjE3NTA1MTAyNDMsImV4cCI6MTc1MDUyODI0M30.sVbjiyTt1PG6kAEK1nQ5hdq_VmjSa3zBCvmC10kZzWo

# Petición en formato curl para registrar un nuevo usuario estándar.
# - Propósito: Crear una cuenta para un usuario con TDAH que gestionará sus propias rutinas.
# - Datos:
#   - username: "johndoe" (nombre de usuario único).
#   - email: "john@example.com" (correo único).
#   - password: "securepassword123" (contraseña, se encripta con bcrypt).
#   - role: No especificado, se asigna "user" por defecto.
# - Respuesta esperada (201):
#   {
#     "message": "User registered successfully",
#     "user": {
#       "userId": 9, // Depende del próximo ID disponible
#       "username": "johndoe",
#       "email": "john@example.com",
#       "role": "user"
#     }
#   }
# - Errores:
#   - 400: Faltan campos obligatorios.
#   - 409: Email ya registrado.
#   - 500: Error en la base de datos (Aiven).
# - Relevancia: Punto de entrada para usuarios con TDAH, permite crear cuentas para gestionar rutinas.


##############
#  USUARIOS  #
##############

# Petición para registrar un guía.
# - Propósito: Crear una cuenta para un guía que apoyará a usuarios con TDAH, por ejemplo, gestionando rutinas para personas con movilidad reducida.
# - Datos:
#   - username: "alfonso" (nombre de usuario único).
#   - email: "alfonso@gmail.com" (correo único).
#   - password: "a1b2c3d6" (contraseña).
#   - role: "guide" (especifica que es un guía).
# - Respuesta esperada (201):
#   {
#     "message": "User registered successfully",
#     "user": {
#       "userId": 10, // Ejemplo
#       "username": "alfonso",
#       "email": "alfonso@gmail.com",
#       "role": "guide"
#     }
#   }
# - Errores: Igual que la petición anterior.
# - Relevancia: Habilita cuentas para guías, quienes podrán vincularse con usuarios y gestionar sus rutinas.
POST {{host}}/api/auth/register
Content-Type: application/json

{
  "username": "carla",
  "email": "carla@gmail.com",
  "password": "a1b2c3d6",
  "first_name": "sandra",
  "last_name": "plata",
  "age": 20,
  "num_tel": "612345478",
  "gender": "Mujer",
  "image": "unir.jpg",
  "role": "user"
}

### Registrar usuario con imagen (multipart/form-data)

POST {{host}}/api/auth/register
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="username"

vanesa
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="email"

vanesa@gmail.com
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="password"

a1b2c3d6
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="first_name"

vanesa
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="last_name"

sales
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="age"

31
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="num_tel"

611223344
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="gender"

Mujer
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="role"

guide
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="image"; filename="unir.jpg"
Content-Type: image/jpeg

< C:\Users\User\Pictures\frontend.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# Petición para autenticar al usuario "norah1".
# - Propósito: Iniciar sesión para obtener un token JWT, necesario para acceder a rutas protegidas.
# - Datos:
#   - email: "norah1@gmail.com" (correo registrado).
#   - password: "a1b2c3d4" (contraseña registrada).
# - Respuesta esperada (200):
#   {
#     "message": "Login successful",
#     "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#     "user": {
#       "userId": 1, // Asumiendo que norah1 tiene userId: 1
#       "email": "norah1@gmail.com",
#       "role": "user" // Asumiendo rol "user"
#     }
#   }
# - Errores:
#   - 400: Faltan email o password.
#   - 401: Credenciales inválidas.
#   - 500: Error en la base de datos.
# - Relevancia: Permite a usuarios con TDAH acceder a la aplicación, autenticándose para gestionar sus rutinas.
POST {{host}}/api/auth/login
Content-Type: application/json

{    
    "email": "carla@gmail.com",
    "password": "a1b2c3d6"
} 


###

# Petición para autenticar al guía "alfonso".
# - Propósito: Iniciar sesión como guía para obtener un token JWT, que permitirá realizar acciones protegidas como crear relaciones guía-usuario.
# - Datos:
#   - email: "alfonso@gmail.com" (correo registrado en la segunda petición).
#   - password: "a1b2c3d6" (contraseña registrada).
# - Respuesta esperada (200):
#   {
#     "message": "Login successful",
#     "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#     "user": {
#       "userId": 10, // Asumiendo que alfonso tiene userId: 10
#       "email": "alfonso@gmail.com",
#       "role": "guide"
#     }
#   }
# - Errores: Igual que el login anterior.
# - Relevancia: Habilita el acceso seguro para guías, permitiendo acciones como vincularse con usuarios para apoyar sus rutinas.
POST {{host}}/api/auth/login
Content-Type: application/json

{
    "email": "sandra@gmail.com",
    "password": "a1b2c3d6"
}

###

# Petición para crear una relación guía-usuario con autenticación.
# - Propósito: Vincular un guía (userId: 7) con un usuario (userId: 1) en la tabla guide_user, usando un token JWT.
# - Datos:
#   - guideId: 7 (ID del guía, por ejemplo, "plata2" con role: "guide").
#   - userId: 1 (ID del usuario, por ejemplo, "norah1").
# - Autenticación: Usa el token predefinido (@token), que corresponde a userId: 8.
# - Nota: Esta petición puede fallar porque el token es para userId: 8, pero guideId es 7. El token debe corresponder al guideId enviado (userId: 7). Para corregir, obtener un token con login para userId: 7.
# - Respuesta esperada (201, si el token fuera válido para userId: 7):
#   {
#     "message": "Guide-user relationship created successfully",
#     "relation": {
#       "guideUserId": 2, // Ejemplo
#       "guideId": 7,
#       "userId": 1
#     }
#   }
# - Errores:
#   - 401: Token inválido o expirado.
#   - 403: El usuario autenticado no es guía.
#   - 400: guideId no es guía, userId no existe, o son iguales.
#   - 409: Relación ya existe.
# - Relevancia: Permite a guías vincularse con usuarios para gestionar sus rutinas, apoyando a personas con TDAH o limitaciones.
POST {{host}}/api/guide-user
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "guideId": 25,
    "userId": 6
}

##############
#  PROFILES  #
##############

### Obtener perfil
GET {{host}}/api/users/profile
Authorization: Bearer {{token}}

### Actualizar perfil multipart

PUT {{host}}/api/users/profile
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{token}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="last_name"

Quesadas
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="num_tel"

611223344
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="color_palette"

{"accent": "#FFD700", "primary": "#4682B4", "secondary": "#708090", "background": "#F5F5F5"}
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="image"; filename="backend.jpg"
Content-Type: image/jpeg

< C:\Users\User\Pictures\backend.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Actualizar perfil json
PUT {{host}}/api/users/profile 
Content-Type: application/json 
Authorization: Bearer {{token}}

{ 
  "last_name": "Vazquez",
  "num_tel": "611223344",
  "color_palette": { "primary": "#FF6F61", "secondary": "#4682B4" }
}

### Listar intereses
GET {{host}}/api/users/interests
Authorization: Bearer {{token}}

### Añadir interés
POST {{host}}/api/users/interests
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "interest_name": "Yoga",
  "priority": "medium"
}

### Actualizar disponibilidad (solo guías)
PUT {{host}}/api/users/availability
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "availability": "Lunes a Viernes, 10:00-14:00"
}

###################
#  PROFILE-GOALS  #
##################

### Obtener todos los objetivos
GET {{host}}/api/profile-goals
Authorization: Bearer {{token}}


### Obtener un objetivo por ID
GET {{host}}/api/profile-goals/8
Authorization: Bearer {{token}}


### Crear un nuevo objetivo
POST {{host}}/api/profile-goals
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "Ir al cine",
  "goal_type": "Cultural",
  "description": "Ver películas en el cine local",
  "target_hours_weekly": 2,
  "status": "active",
  "progress": 0,
  "deadline": "2025-08-01"
}


### Actualizar un objetivo
PUT {{host}}/api/profile-goals/8
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "progress": 30,
  "status": "active",
  "deadline": "2025-07-20"
}


### Eliminar un objetivo
DELETE {{host}}/api/profile-goals/6
Authorization: Bearer {{token}}


##############
#  ROUTINES  #
##############

# Petición para obtener todas las rutinas asociadas al usuario autenticado
# - Propósito: Obtener las rutinas y sus actividades asociadas para un usuario (user_id) o guía (guide_id).
# - Autenticación: Requiere un token JWT válido en el encabezado Authorization.
# - Endpoint: GET /api/routines
# - Relevancia para neurodivergencia: Proporciona una vista estructurada y ordenada de las rutinas, esencial para usuarios con TDAH que necesitan organización clara.
# - Respuesta esperada (200, para user_id=1):
#   {
#     "message": "Rutinas obtenidas correctamente",
#     "routines": [
#       {
#         "routine_id": 1,
#         "user_id": 1,
#         "name": "Rutina matutina",
#         "description": "Yoga y planificación diaria",
#         "is_template": false,
#         "created_at": "2025-06-05T00:00:00.000Z",
#         "updated_at": "2025-06-05T00:00:00.000Z",
#         "start_time": "2025-06-05T08:00:00.000Z",
#         "end_time": "2025-06-05T09:00:00.000Z",
#         "daily_routine": "Daily",
#         "activities": [
#           {
#             "activity_id": 1,
#             "activity_name": "Yoga matutino",
#             "description": "15 minutos de yoga suave",
#             "day_of_week": "Monday",
#             "start_time": "08:00:00",
#             "end_time": "08:15:00",
#             "location": "Sala",
#             "datetime_start": "2025-06-05T08:00:00.000Z",
#             "datetime_end": "2025-06-05T08:15:00.000Z",
#             "icon": null,
#             "category": {
#               "name": "Yoga",
#               "color": "#32CD32"
#             }
#           },
#           {
#             "activity_id": 2,
#             "activity_name": "Planificar día",
#             "description": "Escribir 3 tareas",
#             "day_of_week": "Monday",
#             "start_time": "08:20:00",
#             "end_time": "08:30:00",
#             "location": "Escritorio",
#             "datetime_start": "2025-06-05T08:20:00.000Z",
#             "datetime_end": "2025-06-05T08:30:00.000Z",
#             "icon": null,
#             "category": {
#               "name": "Relajación",
#               "color": "#4682B4"
#             }
#           }
#         ]
#       }
#     ]
#   }
# - Errores:
#   - 401: Token inválido o no proporcionado.
#   - 500: Error en la base de datos (MySQL).
# - Nota: El token debe corresponder a un usuario autenticado (obtenido vía POST /api/auth/login).
#   Por ejemplo, para user_id=1 (maria_g), usa el token generado al iniciar sesión con:
#   { "email": "maria.gomez@example.com", "password": "<contraseña>" }

GET {{host}}/api/routines
Authorization: Bearer {{token}}